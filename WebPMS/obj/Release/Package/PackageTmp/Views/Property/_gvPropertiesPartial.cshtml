@{
    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "gvProperties";
        settings.CallbackRouteValues = new { Controller = "Property", Action = "gvPropertiesPartial", p="" };
        settings.KeyFieldName = "PropertyID; NickName; BuildingType;";
        settings.SettingsPager.PageSize = 25;
        settings.SettingsBehavior.AllowGroup = true;
        settings.SettingsBehavior.AllowFocusedRow = true;
        settings.SettingsBehavior.ProcessFocusedRowChangedOnServer = true;
        settings.SettingsBehavior.AllowSort = false;
        settings.Settings.ShowGroupPanel = true;
        settings.ClientSideEvents.Init = "gridView_Init";
        settings.ClientSideEvents.EndCallback = "gridView_EndCallback";
        settings.Styles.Row.CssClass = "draggable";
        settings.SettingsSearchPanel.Visible = true;
        settings.ClientSideEvents.RowDblClick = "OnGridFocusedRowChanged";

        settings.CustomJSProperties = (s, e) =>
        {
            var gridView = (MVCxGridView)s;
            gridView.JSProperties["cpbtMoveUp_Enabled"] = gridView.FocusedRowIndex > 0;
            gridView.JSProperties["cpbtMoveDown_Enabled"] = gridView.FocusedRowIndex < (gridView.VisibleRowCount - 1);
        };
        settings.HtmlRowPrepared = (s, e) =>
        {
            if (e.RowType == DevExpress.Web.GridViewRowType.Data)
            {
                object displayIndex = e.GetValue("DisplayIndex");
                if (displayIndex != null)
                    e.Row.Attributes.Add("displayIndex", displayIndex.ToString());
            }
        };
        settings.BeforeGetCallbackResult = (s, e) =>
        {
            if (ViewBag.VisibleIndex == null)
                return;
            var gridView = (MVCxGridView)s;
            gridView.FocusedRowIndex = ViewBag.VisibleIndex;
        };

        settings.Columns.Add(column =>
        {
            column.Caption = "Property ID";
            column.FieldName = "PropertyID";
            column.Width = 150;
            column.CellStyle.CssClass = "hide-small hide-ipad";
            column.HeaderStyle.CssClass = "hide-small hide-ipad";
            column.FooterCellStyle.CssClass = "hide-small hide-ipad";
        });
        settings.Columns.Add(column =>
        {
            column.Caption = "Branch ID";
            column.FieldName = "BranchID";
            column.Width = 150;
            column.CellStyle.CssClass = "hide-small hide-ipad";
            column.HeaderStyle.CssClass = "hide-small hide-ipad";
            column.FooterCellStyle.CssClass = "hide-small hide-ipad";
        });
     
        settings.Columns.Add(column =>
        {
            column.Caption = "Status";
            column.FieldName = "Status";
            column.Width = 150;
            column.CellStyle.CssClass = "hide-small hide-ipad";
            column.HeaderStyle.CssClass = "hide-small hide-ipad";
            column.FooterCellStyle.CssClass = "hide-small hide-ipad";
        });
        settings.Columns.Add("NickName", "Nick Name");
        settings.Columns.Add("BuildingType", "Building Type");
        settings.Columns.Add("AddressLine1", "Address Line 1");

        settings.Columns.Add(column =>
        {
            column.Caption = "Address Line 3";
            column.FieldName = "AddressLine3";
            column.Width = 150;
            column.CellStyle.CssClass = "hide-small";
            column.HeaderStyle.CssClass = "hide-small";
            column.FooterCellStyle.CssClass = "hide-small";
        });

        settings.Columns.Add("PostCode", "Post Code");

    });
}
@grid.Bind(Model).GetHtml()